name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # ============================================================================
  # Install
  # ============================================================================
  install:
    name: Install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [16]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: Setup node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install

  # ============================================================================
  # Lint & Format
  # ============================================================================
  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [16]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: Setup node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install --prefer-offline

      - name: Run linter
        run: |
          pnpm run lint:write

      - name: Run formatter
        run: |
          pnpm run format:write

  # ============================================================================
  # Typecheck
  # ============================================================================
  typecheck:
    name: Typecheck
    needs: install
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [16]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: Setup node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install --prefer-offline

      - name: Check types
        run: |
          pnpm run typecheck

  # ============================================================================
  # Build
  # ============================================================================
  build:
    name: Build
    needs: [lint, typecheck]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [16]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: Setup node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install --prefer-offline

      - name: Run build
        run: |
          pnpm run build

  # ============================================================================
  # Release
  # ============================================================================
  release:
    name: Release
    needs: [build]
    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    strategy:
      matrix:
        node: [16]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: Setup node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install --prefer-offline

      - name: Create Release PR or Release
        uses: changesets/action@v1
        with:
          publish: pnpm changeset tag
          commit: '[ci]: release'
          title: '[ci] release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
